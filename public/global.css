/* @import "open-props/style";
@import "open-props/normalize"; */
/* just light or dark themes */
/* @import "./props.media.css";
@import "open-props/normalize/dark";
@import "open-props/buttons/dark";
@import "open-props/normalize/light";
@import "open-props/buttons/light"; */
/* additional import required */
/* @import "open-props/gray-hsl"; */
/* @import "open-props/colors-hsl"; */
body {
  color: unset;
}
/* Global "modern" reset, Andy Bell */
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}
/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}
/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}
/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}
/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}
/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}
/* Balance text wrapping on headings */
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}
/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
  color: currentColor;
}
/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}
/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}
/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}
/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}
/* ====================== end ========================= */
/* =========== deleteme ============= */
main {
  margin: auto;
  padding: 1rem;
  width: 800px;
  max-width: calc(100% - 2rem);
  font-size: 20px;
  line-height: 1.6;
}
.astro-a {
  position: absolute;
  top: -32px;
  left: 50%;
  transform: translatex(-50%);
  width: 220px;
  height: auto;
  z-index: -1;
}
h1 {
  font-size: 4rem;
  font-weight: 700;
  line-height: 1;
  text-align: center;
  margin-bottom: 1em;
}
.text-gradient {
  background-image: var(--accent-gradient);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-size: 400%;
  background-position: 0%;
}
.instructions {
  margin-bottom: 2rem;
  border: 1px solid rgba(var(--accent-light), 25%);
  background: linear-gradient(
    rgba(var(--accent-dark), 66%),
    rgba(var(--accent-dark), 33%)
  );
  padding: 1.5rem;
  border-radius: 8px;
}
.instructions code {
  font-size: 0.8em;
  font-weight: bold;
  background: rgba(var(--accent-light), 12%);
  color: rgb(var(--accent-light));
  border-radius: 4px;
  padding: 0.3em 0.4em;
}
.instructions strong {
  color: rgb(var(--accent-light));
}
.link-card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
  gap: 2rem;
  padding: 0;
}
/* blog tags */
.tags-list {
  display: flex;
  flex-wrap: wrap;
}
.tag {
  margin: 0.25em;
  border: dotted 1px #a1a1a1;
  border-radius: 0.5em;
  padding: 0.5em 1em;
  font-size: 0.5em;
  background-color: #f8fcfd;

  & a {
    color: #00539f;
    text-decoration: none;
  }
}
nav {
  width: 100%;
  color: var(--text-light-mode);
}
.dark nav {
  color: var(--text-dark-mode);
}
/* nav styles */
.hamburger {
  position: absolute;
  top: 10px;
  left: 10px;
  padding-right: 20px;
  cursor: pointer;
}
.hamburger .line {
  display: block;
  width: 36px;
  height: 5px;
  margin-bottom: 6px;
  background-color: var(--bg-dark-mode);
  border-radius: var(--radius-2);
}
hamburger .line:last-of-type {
  margin-bottom: 0;
}
.dark .line {
  background-color: hsla(249, 14%, 90%, 0.4);
}
.nav-links {
  position: relative;
  top: 5rem;
  left: 48px;
  width: 100%;
  display: none;
  margin: 0;

  & li {
    text-decoration: none;
    list-style: none;
  }
}
.nav-links a {
  display: block;
  text-align: center;
  padding: 10px 0;
  text-decoration: none;
  font-size: 1.2rem;
  font-weight: bold;
  text-transform: uppercase;
}
.expanded {
  display: unset;
  top: var(--size-000);
  left: var(--size-10);
}
.expanded li a {
  text-align: left;
}
@media screen and (min-width: 636px) {
  .nav-links {
    display: flex;
    align-items: center;
    justify-content: center;
    position: static;
    width: auto;
    background: none;
  }

  .nav-links a {
    display: inline-block;
    padding: 15px 20px;
  }
  .hamburger {
    display: none;
  }

  header #themeToggle {
    margin-top: unset;
  }
}
/* nav links end */
/* ====================== start ======================= */
:root {
  --accent: 136, 58, 234;
  --accent-light: 224, 204, 250;
  --accent-dark: 49, 10, 101;
  --accent-gradient: linear-gradient(
    45deg,
    rgb(var(--accent)),
    rgb(var(--accent-light)) 30%,
    white 60%
  );
  --text-light-mode: #3b4348;
  --text-dark-mode: var(--gray-2);
  --bg-dark-mode: hsla(214, 9%, 15%, 1);
}
/* light/dark theming */
html {
  font-family: system-ui, sans-serif;
  background-size: 224px;
  color: var(--text-light-mode);
}
html.dark {
  background-color: var(--bg-dark-mode);
  color: var(--text-dark-mode);
}
html.dark h1,
html.dark h2,
html.dark h3,
html.dark,
h4,
html.dark p,
html.dark,
figure,
html.dark,
blockquote,
html.dark dl,
html.dark dd,
html.dark ul,
html.dark li {
  color: var(--text-dark-mode);
}
.dark .nav-links a {
  color: var(--text-dark-mode);
}
body {
  display: grid;
  /* grid-template-columns: var(--size-8) calc(100% - 2 * var(--size-8)) var(--size-8); */
  /* grid-template-rows: minmax(80px, 300px) 1fr 8rem; */
}
header {
  position: absolute;
  width: 100vw;
  height: fit-content;
  align-self: self-start;
  display: flex;
  align-items: center;

  & #themeToggle {
    position: absolute;
    right: 0;
    display: flex;
    justify-content: center;
    width: var(--size-8);
    margin-top: var(--size-8);
    margin-right: var(--size-2);
    cursor: pointer;
  }
}
.is-open {
  padding-bottom: var(--size-3);
  background-image: var(--gradient-26);
}
.dark .is-open {
  background-image: var(--gradient-19);
}
.is-open #themeToggle {
  margin-top: -6.78rem;
}
code {
  font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
    Bitstream Vera Sans Mono, Courier New, monospace;
}
footer {
  align-self: self-end;
  display: grid;
  gap: 1rem;
  color: var(--text-light-mode);
  margin-top: 2rem;
  background-image: var(--gradient-6);
  height: 8rem;
}
.dark footer {
  color: var(--text-dark-mode);
}
.social-links {
  padding: 0.5rem 1rem;
  color: white;
  background-color: #4c1d95;
  text-decoration: none;
}
/* open props dark theme */
:where(html) {
  color-scheme: dark;

  --link: var(--indigo-3);
  --link-visited: var(--purple-3);

  --text-1: var(--gray-0);
  --text-2: var(--gray-4);

  --surface-1: var(--gray-9);
  --surface-2: var(--gray-8);
  --surface-3: var(--gray-7);
  --surface-4: var(--gray-6);

  --scrollthumb-color: var(--gray-6);

  & :where(dialog) {
    background-color: var(--surface-2);
  }

  & :where(button,.btn) {
    --_highlight: var(--_highlight-dark);
    --_bg: var(--_bg-dark);
    --_ink-shadow: var(--_ink-shadow-dark);

    &:where([type="reset"]) {
      --_text: var(--red-2);
      --_border: var(--surface-3);
    }
  }

  & :where(button,.btn,input:is([type="button"],[type="submit"],[type="reset"]))[disabled] {
    --_text: var(--gray-5);
  }

  & :where(textarea, select, input:not([type="button"],[type="submit"],[type="reset"])) {
    background-color: hsl(210deg 11% 10%);
  }

  & :where([type="submit"]),
  & :where(form button:not([type="button"])),
  & :where([type="reset"]), 
  & :where([disabled]) {
    --_bg: var(--surface-1);
  }
}
/* open props light theme */
:where(html) {
  color-scheme: light;

  --link: var(--indigo-7);
  --link-visited: var(--purple-7);

  --text-1: var(--gray-12);
  --text-2: var(--gray-7);

  --surface-1: var(--gray-0);
  --surface-2: var(--gray-2);
  --surface-3: var(--gray-3);
  --surface-4: var(--gray-4);

  --scrollthumb-color: var(--gray-7);

  @media (--HDcolor) {
    @supports (color: color(display-p3 0 0 0)) {
      --link: color(display-p3 .1 .4 1);
      --link-visited: color(display-p3 .6 .2 1);
    }
  }

  & :where(dialog) {
    background-color: var(--surface-1);
  }

  & :where(button,.btn) {
    --_highlight: var(--_highlight-light);
    --_bg: var(--_bg-light);
    --_ink-shadow: var(--_ink-shadow-light);

    & :where([type="reset"]) {
      --_text: var(--red-6);
      --_border: var(--red-3);
    }
  }

  & :where(button,.btn,input:is([type="button"],[type="submit"],[type="reset"]))[disabled] {
    --_text: var(--gray-6);
  }

  & :where(textarea, select, input:not([type="button"],[type="submit"],[type="reset"])) {
    background-color: var(--surface-2);
  }
}